(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{630:function(e,t,n){"use strict";function a(e){return Object.keys(e).reduce((function(t,n){return!n.startsWith("data-")&&!n.startsWith("aria-")&&"role"!==n||n.startsWith("data-__")||(t[n]=e[n]),t}),{})}n.d(t,"a",(function(){return a}))},818:function(e,t,n){},927:function(e,t,n){"use strict";n.r(t);n(72),n(117),n(214),n(136),n(97),n(98),n(99),n(74),n(75),n(73),n(158),n(247),n(246),n(159),n(350);var a=n(0),r=n.n(a),c=n(71),o=n(2),l=n(4),i=n(1),s=n(129),u=n(265),m=n(80),p=n(267),f=n(165),b=n(130),d=n(268),h=n(341),g=n(266),v=n(5),y=n.n(v),E=n(56),O=n(70),j=n(630),N=n(38),x=n(23),k=n(24),C=n(31),w=n(32),S=function(e){Object(C.a)(n,e);var t=Object(w.a)(n);function n(){var e;return Object(x.a)(this,n),(e=t.apply(this,arguments)).state={error:void 0,info:{componentStack:""}},e}return Object(k.a)(n,[{key:"componentDidCatch",value:function(e,t){this.setState({error:e,info:t})}},{key:"render",value:function(){var e=this.props,t=e.message,n=e.description,r=e.children,c=this.state,o=c.error,l=c.info,i=l&&l.componentStack?l.componentStack:null,s=void 0===t?(o||"").toString():t,u=void 0===n?i:n;return o?a.createElement(q,{type:"error",message:s,description:a.createElement("pre",null,u)}):r}}]),n}(a.Component),I=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n},T={success:s.a,info:h.a,error:m.a,warning:b.a},M={success:u.a,info:g.a,error:p.a,warning:d.a},A=function(e){var t=e.description,n=e.icon,r=e.prefixCls,c=e.type,o=(t?M:T)[c]||null;return n?Object(N.d)(n,a.createElement("span",{className:"".concat(r,"-icon")},n),(function(){return{className:y()("".concat(r,"-icon"),Object(i.a)({},n.props.className,n.props.className))}})):a.createElement(o,{className:"".concat(r,"-icon")})},L=function(e){var t=e.isClosable,n=e.closeText,r=e.prefixCls,c=e.closeIcon,o=e.handleClose;return t?a.createElement("button",{type:"button",onClick:o,className:"".concat(r,"-close-icon"),tabIndex:0},n?a.createElement("span",{className:"".concat(r,"-close-text")},n):c):null},F=function(e){var t,n=e.description,r=e.prefixCls,c=e.message,s=e.banner,u=e.className,m=void 0===u?"":u,p=e.style,b=e.onMouseEnter,d=e.onMouseLeave,h=e.onClick,g=e.afterClose,v=e.showIcon,N=e.closable,x=e.closeText,k=e.closeIcon,C=void 0===k?a.createElement(f.a,null):k,w=e.action,S=I(e,["description","prefixCls","message","banner","className","style","onMouseEnter","onMouseLeave","onClick","afterClose","showIcon","closable","closeText","closeIcon","action"]),T=a.useState(!1),M=Object(l.a)(T,2),F=M[0],q=M[1],P=a.useRef(),R=a.useContext(O.b),_=R.getPrefixCls,Q=R.direction,V=_("alert",r),W=function(e){var t;q(!0),null===(t=S.onClose)||void 0===t||t.call(S,e)},B=!!x||N,D=function(){var e=S.type;return void 0!==e?e:s?"warning":"info"}(),H=!(!s||void 0!==v)||v,J=y()(V,"".concat(V,"-").concat(D),(t={},Object(i.a)(t,"".concat(V,"-with-description"),!!n),Object(i.a)(t,"".concat(V,"-no-icon"),!H),Object(i.a)(t,"".concat(V,"-banner"),!!s),Object(i.a)(t,"".concat(V,"-rtl"),"rtl"===Q),t),m),U=Object(j.a)(S);return a.createElement(E.default,{visible:!F,motionName:"".concat(V,"-motion"),motionAppear:!1,motionEnter:!1,onLeaveStart:function(e){return{maxHeight:e.offsetHeight}},onLeaveEnd:g},(function(e){var t=e.className,r=e.style;return a.createElement("div",Object(o.a)({ref:P,"data-show":!F,className:y()(J,t),style:Object(o.a)(Object(o.a)({},p),r),onMouseEnter:b,onMouseLeave:d,onClick:h,role:"alert"},U),H?a.createElement(A,{description:n,icon:S.icon,prefixCls:V,type:D}):null,a.createElement("div",{className:"".concat(V,"-content")},c?a.createElement("div",{className:"".concat(V,"-message")},c):null,n?a.createElement("div",{className:"".concat(V,"-description")},n):null),w?a.createElement("div",{className:"".concat(V,"-action")},w):null,a.createElement(L,{isClosable:!!B,closeText:x,prefixCls:V,closeIcon:C,handleClose:W}))}))};F.ErrorBoundary=S;var q=F,P=n(114),R=n(163),_=n(95),Q=n(260),V=n(16),W=n(115),B=n.n(W),D=(n(363),n(27)),H=n(116),J=n(82);n(818);function U(){return(U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function G(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,r,c,o,l=[],i=!0,s=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=c.call(n)).done)&&(l.push(a.value),l.length!==t);i=!0);}catch(e){s=!0,r=e}finally{try{if(!i&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(s)throw r}}return l}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return $(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var z={labelCol:{span:24},wrapperCol:{span:24}},K=function(e){var t=G(c.a.useForm(),1)[0],n=e.history,o=G(Object(a.useState)(!1),2),l=(o[0],o[1],G(Object(a.useState)(!1),2)),i=l[0],s=l[1],u=G(Object(a.useState)(null),2),m=u[0];u[1];return r.a.createElement("div",{className:"box-container"},r.a.createElement("span",null,r.a.createElement("img",{src:Q.a,alt:"logo",style:{width:320,marginBottom:30},className:"ava-logo"})),r.a.createElement("div",{className:"container-forgot ant-row"},r.a.createElement("div",{className:"col-form-login form-center"},r.a.createElement("div",{className:"panel"},r.a.createElement("div",{className:"text-center mb-60"},r.a.createElement("div",{className:"header-text"},r.a.createElement("p",{className:"text-vietinbank-header"},r.a.createElement("span",{className:"cl-blue"},"Đăng nhập")),r.a.createElement("p",{className:"text-vietinbank-header"},r.a.createElement("span",{className:"cl-red"},"Quản lý"),r.a.createElement("span",{className:"cl-blue"}," chi tiêu hộ gia đình"))),r.a.createElement(q,{style:{borderRadius:5,marginTop:"20px"},message:"\r Vui lòng nhập thông tin để được cấp lại mật khẩu!",type:"info",showIcon:!0})),r.a.createElement(c.a,U({name:"normal_login",className:"login-form","data-testid":"login-form",layout:"vertical",form:t},z,{onFinish:function(e){s(!0),e.requestId=m,Object(_.c)(e).then((function(e){e.code===V.a.CODE_SUCCESS&&(Object(H.g)("success","Mật khẩu mới đã được hệ thống gửi qua Email. Quý khách vui lòng kiểm tra và làm theo hướng dẫn."),n.push("/login"))})).finally((function(){s(!1)}))},onFinishFailed:function(e){var n=e.errorFields;t.scrollToField(n[0].name)}}),r.a.createElement(c.a.Item,U({name:"username",label:"Tên đăng nhập"},z,{rules:[{required:!0,message:"Vui lòng nhập Tên đăng nhập"},{validator:function(e,t){return function(e,t){return Object(J.h)([Object(J.g)(e,t,3,50),Object(J.f)(e,t),Object(J.b)(e,t)],"Tên đăng nhập từ 3 - 50 ký tự, nhập ký tự không dấu, số, không nhập khoảng trắng, ký tự đặc biệt")}(t,"Tên đăng nhập")}}]}),r.a.createElement(P.a,{className:"form-control",placeholder:"Tên đăng nhập",maxLength:50})),r.a.createElement(c.a.Item,U({name:"email",label:"Email",className:"mb-20"},z,{rules:[{required:!0,message:"Vui lòng nhập Email"},{validator:function(e,t){return function(e){return Object(J.h)([Object(J.c)(e)],"Email có định dạng text@text.text, không nhập khoảng trắng và xuống dòng")}(t)}}]}),r.a.createElement(P.a,{className:"form-control",placeholder:"Email",maxLength:100})),r.a.createElement(c.a.Item,{className:"mt-40"},r.a.createElement(R.a,{htmlType:"submit",type:"primary",className:"login-form-button ant-btn-primary ant-btn mt-40",loading:i},"Gửi yêu cầu")),r.a.createElement(c.a.Item,null,r.a.createElement(R.a,{type:"default",className:"back-to-login ant-btn mb-20",onClick:function(){return n.push("/login")}},"Quay lại")))))))};K.propTypes={history:B.a.object.isRequired};t.default=Object(D.withRouter)(K)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,