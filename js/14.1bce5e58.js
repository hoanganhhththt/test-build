(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{704:function(e,t,n){},706:function(e,t,n){},707:function(e,t,n){},924:function(e,t,n){"use strict";n.r(t);n(158),n(72),n(613),n(614),n(138),n(348),n(136),n(208),n(97),n(160),n(210),n(98),n(209),n(211),n(248),n(249),n(99),n(74),n(75),n(73),n(247),n(246),n(159);var r=n(0),a=n.n(r),o=n(115),i=n.n(o),l=n(27),c=(n(704),n(912)),u=n(926),s=n(116),m=(n(705),n(215),n(361),n(262)),h=n(643),f=n(212),p=n(931),d=n(932),y=n(933),b=n(934),g=n(16).a.IDS_DEPARTMENT,v=g.CSKH,O=g.DVTT,j=g.DGL,S=g.DS,E=g.KD,w=g.KT,P=(g.SPADMIN,{items:[{label:"Trang chủ",ids:[v,E,S,w,O,j],icon:a.a.createElement(p.a,null),key:"/home"},{label:"Quản lý người dùng",ids:[v,E,S,w,O,j],icon:a.a.createElement(d.a,null),key:"/user/list"},{label:"Quản lý Phòng",ids:[v,E,S,w,O,j],icon:a.a.createElement(y.a,null),key:"/room/list"},{label:"Quản lý giao dịch",ids:[v,E,S,w,O,j],icon:a.a.createElement(b.a,null),key:"/transaction/list"}]});n(706);function x(e){return(x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?C(Object(n),!0).forEach((function(t){T(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):C(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function T(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==x(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===x(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function A(e){return function(e){if(Array.isArray(e))return N(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||D(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function I(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,l=[],c=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);c=!0);}catch(e){u=!0,a=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw a}}return l}}(e,t)||D(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(e,t){if(e){if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?N(e,t):void 0}}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var R=c.a.Sider,z=a.a.memo((function(e){var t=e.history,n=e.isCollapsed,o=e.arrayBreadCrumb,i=t.location.pathname,l=Object(s.i)(P.items,[],i),c=I(Object(r.useState)(i),2),u=c[0],p=c[1],d=I(Object(r.useState)(n?[]:l),2),y=d[0],b=d[1];return Object(r.useEffect)((function(){var e=o.length;if(e>0&&p(o[e-1].path),3==e){var t=o.find((function(e){return"sub"===(null==e?void 0:e.type)}));p(t?o[e-1].path:o[e-2].path)}}),[o]),Object(r.useEffect)((function(){var e=Object(s.i)(P.items,[],i);n||b(e)}),[i,n]),a.a.createElement(R,{collapsed:n,className:"".concat(n?"sidebar-close":"sidebar-open"),style:{color:"#ffffff"}},a.a.createElement(h.a,{mode:"inline",onClick:function(e){sessionStorage.clear(),t.push(e.key)},selectedKeys:["".concat(u)],openKeys:y,onOpenChange:function(e){var t=e[e.length-1],n=e.findIndex((function(e){return!t.includes(e)}));if(-1!==n){var r=e.filter((function(e,t){return t<n}));b([].concat(A(r),[t]))}else b(e)},inlineIndent:16,items:P.items.map((function(e){return function e(t){var n;return(null==t||null===(n=t.children)||void 0===n?void 0:n.length)>0?k(k({},t),{},{children:t.children.map((function(t){return e(t)}))}):k(k({},t),{},{label:a.a.createElement(f.b,{to:t.key},a.a.createElement(m.a,{placement:"right",title:t.label},t.label.length>50?t.label.slice(0,50)+"...":t.label))})}(e)}))}))}));z.propTypes={history:i.a.object.isRequired,isCollapsed:i.a.bool.isRequired,arrayBreadCrumb:i.a.array.isRequired};var Q=Object(l.withRouter)(z),q=n(650),K=(n(95),n(935)),M=n(562),U=n(936),L=n(937),B=(n(707),n.p+"src/assets/img/logo-hust.png"),H=n.p+"src/assets/img/user.png";function J(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,l=[],c=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);c=!0);}catch(e){u=!0,a=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw a}}return l}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return $(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var _=a.a.memo((function(e){var t,n=e.history,o=Object(s.d)("username_mms"),i=null===(t=JSON.parse(localStorage.getItem("userInfo")))||void 0===t?void 0:t.id,l=J(Object(r.useState)(!1),2),c=l[0],u=l[1],m=function(){u(!c),e.handleCollapse(!c)},h={items:[{label:"Thông tin tài khoản",icon:a.a.createElement(d.a,null),key:"myAccount"},{label:"Đổi mật khẩu",icon:a.a.createElement(K.a,null),key:"changePassword"},{label:"Đăng xuất",icon:a.a.createElement(M.a,null),key:"logout"}],onClick:function(e){switch(e.key){case"myAccount":localStorage.setItem("USER_ID",i),n.push("/user/detail");break;case"changePassword":n.push("/setting/change-pass");break;case"logout":localStorage.clear(),sessionStorage.clear(),n.push("/login")}},style:{width:"180px"}};return a.a.createElement("div",{className:"main-header"},a.a.createElement("div",{className:"float-left"},c?a.a.createElement(U.a,{onClick:function(){return m()},className:"icon-menu-fold"}):a.a.createElement(L.a,{onClick:function(){return m()},className:"icon-menu-fold"}),a.a.createElement("span",null,a.a.createElement("span",null,a.a.createElement("span",null,a.a.createElement("img",{src:B,alt:"logo",style:{width:25,marginTop:-7,marginRight:10}})),a.a.createElement("span",{className:"code-text"},a.a.createElement("b",null,"HUST"))))),a.a.createElement("div",{className:"text-header"},a.a.createElement("span",null,a.a.createElement("span",{className:"qr-text"},"Quản lý "),a.a.createElement("span",{className:"code-text"},"chi tiêu hộ gia đình"))),a.a.createElement("div",{className:"float-right right-content"},a.a.createElement(q.a,{menu:h,className:"dropdown-info"},a.a.createElement("span",{className:"ant-dropdown-link cursor-pointer"},a.a.createElement("span",{className:"border-avatar"},a.a.createElement("img",{className:"avatar",src:H,alt:"avatar"})),a.a.createElement("b",{style:{color:"white",marginLeft:"10px"}},o)))))}));_.propTypes={handleCollapse:i.a.func.isRequired,history:i.a.object.isRequired};var W=Object(l.withRouter)(_),F=(n(117),a.a.lazy((function(){return n.e(4).then(n.bind(null,914))}))),G=a.a.lazy((function(){return n.e(5).then(n.bind(null,927))})),V=a.a.lazy((function(){return n.e(3).then(n.bind(null,915))})),X=a.a.lazy((function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(15)]).then(n.bind(null,928))})),Y=a.a.lazy((function(){return Promise.all([n.e(0),n.e(12)]).then(n.bind(null,917))})),Z=a.a.lazy((function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(6),n.e(17)]).then(n.bind(null,925))})),ee=a.a.lazy((function(){return Promise.all([n.e(0),n.e(13)]).then(n.bind(null,918))})),te=a.a.lazy((function(){return Promise.all([n.e(0),n.e(1),n.e(2),n.e(6),n.e(16)]).then(n.bind(null,929))})),ne=a.a.lazy((function(){return Promise.all([n.e(0),n.e(21)]).then(n.bind(null,919))})),re=a.a.lazy((function(){return Promise.all([n.e(0),n.e(1),n.e(11),n.e(20)]).then(n.bind(null,930))})),ae=[{path:"/",exact:!0,name:"Home"},{path:"/reset-password",exact:!0,name:"Đặt lại mật khẩu",component:F},{path:"/register",exact:!0,name:"Đăng kí tài khoản",component:a.a.lazy((function(){return Promise.resolve().then(n.bind(null,343))}))},{path:"/forgot-password",exact:!0,name:"Quên mật khẩu",component:G},{path:"/setting/change-pass",exact:!0,name:"Thay đổi mật khẩu",component:V},{path:"/transaction/list",exact:!0,name:"Danh sách giao dịch",component:X},{path:"/transaction/detail",exact:!0,name:"Chi tiết giao dịch",component:Y},{path:"/transaction/edit",exact:!0,name:"Cập nhật giao dịch",component:Y},{path:"/transaction/add",exact:!0,name:"Thêm mới giao dịch",component:Y},{path:"/user/list",exact:!0,name:"Danh sách người dùng",component:Z},{path:"/user/detail",exact:!0,name:"Chi tiết người dùng",component:ee},{path:"/user/add",exact:!0,name:"Thêm mới người dùng",component:ee},{path:"/user/edit",exact:!0,name:"Cập nhật người dùng",component:ee},{path:"/room/list",exact:!0,name:"Danh sách Phòng",component:te},{path:"/room/detail",exact:!0,name:"Chi tiết thông tin Phòng",component:ne},{path:"/room/add",exact:!0,name:"Thêm mới Phòng",component:ne},{path:"/room/edit",exact:!0,name:"Cập nhật thông tin Phòng",component:ne},{path:"/home",exact:!0,name:"Trang chủ",component:re}],oe=[{name:"Trang chủ",path:"/home"},{name:"Quản lí người dùng",path:"/user",children:[{name:"Danh sách người dùng",path:"/user/list"},{name:"Chi tiết người dùng",path:"/user/detail"},{name:"Chỉnh sửa người dùng",path:"/user/edit"},{name:"Thêm mới người dùng",path:"/user/add"}]},{name:"Quản lí Phòng",path:"/user",children:[{name:"Danh sách Phòng",path:"/room/list"},{name:"Chi tiết thông tin Phòng",path:"/room/detail"},{name:"Chỉnh sửa thông tin Phòng",path:"/room/edit"},{name:"Thêm mới Phòng",path:"/room/add"}]},{name:"Quản lí giao dịch",path:"/transaction",children:[{name:"Danh sách giao dịch",path:"/transaction/list"},{name:"Chi tiết giao dịch",path:"/transaction/detail"},{name:"Chỉnh sửa giao dịch",path:"/transaction/edit"},{name:"Thêm mới giao dịch",path:"/transaction/add"}]}];n(33),n(708);function ie(e){return(ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var le=["children"];function ce(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,l=[],c=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);c=!0);}catch(e){u=!0,a=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw a}}return l}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return ue(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ue(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ue(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function se(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function me(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?se(Object(n),!0).forEach((function(t){he(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):se(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function he(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==ie(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==ie(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===ie(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function fe(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var pe=c.a.Content,de=a.a.memo((function(e){var t=e.location.pathname,n=t.slice(0,Object(s.e)(t,"/",2)),o=t.slice(Object(s.e)(t,"/",2,Object(s.e)(t,"/",3))),i=function e(t,n){var r=[];return t.every((function(t){var a=t.children,o=fe(t,le);if(n===o.path||n.includes(o.path)&&!a)return r.push(me(me({},o),{},{hasChild:!!a})),!1;if(a){var i=e(a,n);if(0!==i.length)return r.push(me(me({},o),{},{hasChild:!0})),i.forEach((function(e){return r.push(e)})),!1}return!0})),r},m=ce(Object(r.useState)(window.innerWidth<=1100),2),h=m[0],f=m[1],p=ce(Object(r.useState)(n),2),d=p[0],y=p[1],b=ce(Object(r.useState)(o),2),g=b[0],v=b[1],O=ce(Object(r.useState)(i(oe,t)),2),j=O[0],S=O[1];window.addEventListener("resize",(function(){window.innerWidth<=1100?f(!0):f(!1)})),Object(r.useEffect)((function(){d!==n?(y(n),sessionStorage.removeItem("paramsSearch")):g!==o&&v(o);var e=i(oe,t);S(e)}),[t]);var E=a.a.createElement("div",{style:{height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}},"Đang tải...");localStorage.getItem("lastLogin");return a.a.createElement(a.a.Fragment,null,a.a.createElement(W,{handleCollapse:function(e){return f(e)}}),a.a.createElement(c.a,{className:"main-layout"},a.a.createElement(a.a.Suspense,{fallback:E},a.a.createElement(Q,{isCollapsed:h,arrayBreadCrumb:j})),a.a.createElement(c.a,{className:"site-layout"},a.a.createElement(u.a,null,j.map((function(e){return a.a.createElement(u.a.Item,{key:e.path,items:e.name},e.name)}))),a.a.createElement(pe,{style:{margin:"60px 16px 0 16px",clear:"both"}},a.a.createElement(a.a.Suspense,{fallback:E},a.a.createElement(l.Switch,null,ae.map((function(e,t){return e.component?a.a.createElement(l.Route,{key:String(t),path:e.path,exact:e.exact,name:e.name,render:function(t){return a.a.createElement(e.component,t)}}):null})),a.a.createElement(l.Redirect,{from:"/",to:"/login"})))))))}));de.propTypes={location:i.a.object.isRequired};t.default=Object(l.withRouter)(de)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,